version: '3.2'

services:

  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    restart: always
    entrypoint: ['/usr/src/services/entrypoint.sh']
    volumes:
      - './services/backend:/usr/src/services'
    ports:
      - 5001:5000
    environment:
      - DEFAULT_COMPANY_NAME
      - FLASK_ENV=${ENVIRONMENT}

      - DATABASE_URL=postgresql://postgres:postgres@db:5432/app_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@db:5432/app_test

      - MAIL_SERVER
      - MAIL_USERNAME
      - MAIL_PASSWORD

      - CLOUDINARY_CLOUD_NAME
      - CLOUDINARY_API_KEY
      - CLOUDINARY_API_SECRET

      - SECRET_KEY

      - APP_SETTINGS=app.config.DevelopmentConfig
    depends_on:
      - db

  db:
    build:
      context: ./services/db
      dockerfile: Dockerfile
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    restart: always
    volumes:
      - './services/frontend:/usr/src/fred'
      - '/usr/src/fred/node_modules'
    ports:
      - 3007:3000
    environment:
      - NODE_ENV=${ENVIRONMENT}
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_BACKEND_SERVICE_URL

      - REACT_APP_GOOGLE_API_KEY
      - REACT_APP_GEOAPIFY_API_KEY
    depends_on:
      - backend